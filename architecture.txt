В игре есть 2 фракции.
У каждой есть прокачиваемая база, уникальные юниты (3 вида + особый).
В начале игры игрок выбирает фракцию, и далее ему становятся при определенных условиях возможности создания юнитов. 
Юниты - наследники абстрактного класса Faction<i>Unit, <i> = 1, 2, которые наследники класса Unit.
При создании юнита указываются его характеристики name, damage, defense, speed, range, переменной health присваивается значение defense

На базе находится фабрика для каждого вида юнита данной фракции, предоставляющая экземпляр класса юнита при обращении игрока.
Каждая фабрика - наследник класса AbstractFactory. При создании фабрики указывается стоимость юнита в игровой валюте.
Фабрика также хранит список всех юнитов, находящихся в игре, и убирает из игры мёртвых юнитов.
Нам необходимо различать юниты различных типов (у них разные параметры, у некоторых особые методы), поэтому не можем использовать Factory Method.
Использование паттерна Prototype усложняет создание юнитов:
при его использовании надо в начале игры создать по экземпляру юнитов, недоступных игроку (создать, не имея фабрики), затем клонировать их в играбельных юнитов (требует метода, скрывающего их от игрока). 
При этом, если будет необходимо ввести подклассы юнитов, это усложнит задачу ещё сильнее, так как придётся вводить больше неиграбельных юнитов в начале игры.

Ближе к концу игры у игрока появляется возможность создать особого юнита.
Он наследник абстрактного класса UniqueUnit, который является наследником класса Unit.
Метод syncronize() в его фабрике, наследованный от AbstractFactory, не позволяет игроку создавать несколько особых юнитов.

В течение игры можно прокачивать базу, для каждой базы есть 5 улучшений.
База реализована с помощью абстрактного класса Base, от которого наследуются классы для фракций.
Добавление улучшения реализовано с помощью отдельного метода в классе базы.

Для управления фракцией реализован интерфейс MainInterface, в котором находится метод выбора фракции, создающий базу игрока.

База и юниты имеют свой отдельный интерфейс, принимающий при создании экземпляр базы/юнита.
В интерфейсе базы есть возможность выбора команды (создать юнит, улучшить базу, узнать баланс игрока), они обращаются к экземпляру базы.
При создании юнита интерфейс базы создаёт интерфейс юнита.
В интерфейсе юнита есть метод, позволяющий узнать информацию о нём, он обращается к экземпляру юнита.

diagram.png содержит диаграмму со всеми классами и их связями.
